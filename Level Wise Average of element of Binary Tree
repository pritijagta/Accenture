/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        ArrayList<Double>l=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>(); 
        if(root==null)
        {
            return l;
        }
        q.add(root);

        while(!q.isEmpty())
        {
            int levelSize=q.size();
            double avg=0d;
            for(int i=0;i<levelSize;i++)
            {
                TreeNode n=q.poll();
                avg=avg+n.val;

                if(n.left!=null)
                {
                    q.add(n.left);
                }   
                if(n.right!=null)
                {
                    q.add(n.right);
                }

            }

            


            l.add(avg/levelSize);
        }
  return l;
    }
  
}
